Name,Java,Scala
[Balanced Binary Tree](https://leetcode.com/problems/balanced-binary-tree),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/tree/recursive/BalancedBinaryTree.java),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/tree/recursive/BalancedBinaryTree.scala)
[Binary Search](https://leetcode.com/problems/binary-search),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/iterative/BinarySearch.java),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/array/recursive/BinarySearch.scala)
[Coin Change](https://leetcode.com/problems/coin-change),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/recursive/CoinChange.java),
[Combination Sum](https://leetcode.com/problems/combination-sum),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/recursive/CombinationSum.java),
[Construct Binary Tree from Preorder and Inorder Traversal](https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/tree/recursive/ConstructBinaryTreeFromPreorderAndInorderTraversal.java),
[Container With Most Water](https://leetcode.com/problems/container-with-most-water),,[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/array/recursive/ContainerWithMostWater.scala)
[Decode Ways](https://leetcode.com/problems/decode-ways),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/string/recursive/DecodeWays.java),
[Find All Anagrams in a String](https://leetcode.com/problems/find-all-anagrams-in-a-string),,[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/string/recursive/FindAllAnagramsInAString.scala)
[Find First and Last Position of Element in Sorted Array](https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/iterative/FindFirstAndLastPositionOfElementInSortedArray.java),
[Find Minimum in Rotated Sorted Array](https://leetcode.com/problems/find-minimum-in-rotated-sorted-array),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/iterative/FindMinimumInRotatedSortedArray.java),
[Find Smallest Letter Greater Than Target](https://leetcode.com/problems/find-smallest-letter-greater-than-target),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/iterative/FindSmallestLetterGreaterThanTarget.java),
[Generate Parentheses](https://leetcode.com/problems/generate-parentheses),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/string/recursive/GenerateParentheses.java),
[Get the Maximum Score](https://leetcode.com/problems/get-the-maximum-score),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/iterative/GetTheMaximumScore.java),
[Insert into a Binary Search Tree](https://leetcode.com/problems/insert-into-a-binary-search-tree),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/tree/recursive/InsertIntoABinarySearchTree.java),
[Invert Binary Tree](https://leetcode.com/problems/invert-binary-tree),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/tree/recursive/InvertBinaryTree.java),
[Letter Combinations of a Phone Number](https://leetcode.com/problems/letter-combinations-of-a-phone-number),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/string/recursive/LetterCombinationsOfAPhoneNumber.java),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/string/recursive/LetterCombinationsOfAPhoneNumber.scala)
[Linked List Cycle](https://leetcode.com/problems/linked-list-cycle),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/linked_list/iterative/LinkedListCycle.java),
[Longest Substring Without Repeating Characters](https://leetcode.com/problems/longest-substring-without-repeating-characters),,[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/string/recursive/LongestSubstringWithoutRepeatingCharacters.scala)
[Lowest Common Ancestor of a Binary Search Tree](https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/tree/recursive/LowestCommonAncestorOfABinarySearchTree.java),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/tree/recursive/LowestCommonAncestorOfABinarySearchTree.scala)
[Lowest Common Ancestor of a Binary Tree](https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/tree/recursive/LowestCommonAncestorOfABinaryTree.java),
[Maximum Depth of Binary Tree](https://leetcode.com/problems/maximum-depth-of-binary-tree),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/tree/recursive/MaximumDepthOfBinaryTree.java),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/tree/recursive/MaximumDepthOfBinaryTree.scala)
[Middle of the Linked List](https://leetcode.com/problems/middle-of-the-linked-list),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/linked_list/iterative/MiddleOfTheLinkedList.java),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/linked_list/recursive/MiddleOfTheLinkedList.scala)
[Minimum Consecutive Cards to Pick Up](https://leetcode.com/problems/minimum-consecutive-cards-to-pick-up),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/iterative/MinimumConsecutiveCardsToPickUp.java),
[Minimum Window Substring](https://leetcode.com/problems/minimum-window-substring),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/iterative/MinimumWindowSubstring.java),
[Move Zeroes](https://leetcode.com/problems/move-zeroes),,[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/array/recursive/MoveZeroes.scala)
[Palindrome Partitioning](https://leetcode.com/problems/palindrome-partitioning),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/string/recursive/PalindromePartitioning.java),
[Peak Index in a Mountain Array](https://leetcode.com/problems/peak-index-in-a-mountain-array),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/iterative/PeakIndexInAMountainArray.java),
[Permutations](https://leetcode.com/problems/permutations),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/recursive/Permutations.java),
[Product of Array Except Self](https://leetcode.com/problems/product-of-array-except-self),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/iterative/ProductOfArrayExceptSelf.java),
[Range Sum Query - Immutable](https://leetcode.com/problems/range-sum-query---immutable),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/iterative/RangeSumQueryImmutable.java),
[Remove Duplicates from Sorted Array](https://leetcode.com/problems/remove-duplicates-from-sorted-array),,[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/array/recursive/RemoveDuplicatesFromSortedArray.scala)
[Serialize and Deserialize Binary Tree](https://leetcode.com/problems/serialize-and-deserialize-binary-tree),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/tree/recursive/SerializeAndDeserializeBinaryTree.java),
[Sqrt(x)](https://leetcode.com/problems/sqrtx),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/math/iterative/SqrtX.java),
[Subarray Sum Equals K](https://leetcode.com/problems/subarray-sum-equals-k),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/iterative/SubarraySumEqualsK.java),
[Subsets](https://leetcode.com/problems/subsets),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/recursive/Subsets.java),
[Subtree of Another Tree](https://leetcode.com/problems/subtree-of-another-tree),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/tree/recursive/SubtreeOfAnotherTree.java),
[Two Sum II - Input Array Is Sorted](https://leetcode.com/problems/two-sum-ii---input-array-is-sorted),,[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/array/recursive/TwoSumInputArrayIsSorted.scala)
[Two Sum](https://leetcode.com/problems/two-sum),[:arrow_right_hook:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/array/iterative/TwoSum.java),
[Valid Palindrome](https://leetcode.com/problems/valid-palindrome),,[:arrows_counterclockwise:](https://github.com/leowajda/eureka-scala/blob/master/src/main/scala/string/recursive/ValidPalindrome.scala)
[Validate Binary Search Tree](https://leetcode.com/problems/validate-binary-search-tree),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/tree/recursive/ValidateBinarySearchTree.java),
[Word Break](https://leetcode.com/problems/word-break),[:arrows_counterclockwise:](https://github.com/leowajda/eureka-java/blob/master/src/main/java/string/recursive/WordBreak.java),
